name: Build, Lint, and Push Docker Images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Lint code base
        uses: github/super-linter@v6
        env:
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_TYPESCRIPT_STANDARD: false
          VALIDATE_SQL: false
          VALIDATE_SQLFLUFF: false
          VALIDATE_JSON: false
          VALIDATE_MARKDOWN: false
          VALIDATE_JSCPD: false
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_PYLINT: false
          VALIDATE_PYTHON_FLAKE8: false
          VALIDATE_PYTHON_ISORT: false
          VALIDATE_PYTHON_MYPY: false
          VALIDATE_CHECKOV: false
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

  docker: 
    runs-on: ubuntu-latest
    needs: lint
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      FRONTEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/finki-totp-frontend
      BACKEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/finki-totp-backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_PASSWORD }}

      - name: Build frontend Docker image
        run: |
          docker build -t "${FRONTEND_IMAGE}:latest" ./frontend

      - name: Build backend Docker image
        run: |
          docker build -t "${BACKEND_IMAGE}:latest" ./backend

      - name: Push frontend Docker image
        run: |
          docker push "${FRONTEND_IMAGE}:latest"

      - name: Push backend Docker image
        run: |
          docker push "${BACKEND_IMAGE}:latest"

      - name: Docker image cleanup
        run: |
          docker rmi "${FRONTEND_IMAGE}:latest" || true
          docker rmi "${BACKEND_IMAGE}:latest" || true
